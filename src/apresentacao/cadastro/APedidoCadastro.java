/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao.cadastro;

import apresentacao.pesquisa.AFuncionarioPesquisa;
import apresentacao.pesquisa.APromocaoPesquisa;
import entidade.EFuncionario;
import entidade.EItemPedido;
import entidade.EPedido;
import entidade.EProduto;
import java.awt.Dimension;
import java.text.NumberFormat;
import java.util.List;
import java.util.Vector;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.NFuncionario;
import negocio.NProduto;

/**
 *
 * @author Pedro
 */
public class APedidoCadastro extends javax.swing.JInternalFrame {

    JDesktopPane jDesktopPanePrincipal;
    EPedido ePedido;

    /**
     * Creates new form APedidoCadastro
     */
    public APedidoCadastro() {
        initComponents();
        carregaCombos();

    }

    public APedidoCadastro(JDesktopPane parametro) {
        this();

        jDesktopPanePrincipal = parametro;
        ePedido = new EPedido();

        LimpaTela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonAdiconarProduto = new javax.swing.JButton();
        jButtonRetirarProduto = new javax.swing.JButton();
        jComboBoxProduto = new javax.swing.JComboBox<>();
        jComboBoxFuncionario = new javax.swing.JComboBox<>();
        jTextFieldCodigo = new javax.swing.JTextField();
        jButtonPesquisa = new javax.swing.JButton();
        jTextFieldQuantidade = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVenda = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldValorTotal = new javax.swing.JTextField();
        jButtonSalvar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButtonpesquisa = new javax.swing.JButton();
        jButtonPesquisaProduto = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Realizar Venda");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel6)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel1.setText("Codigo");

        jLabel2.setText("Funcionario");

        jLabel3.setText("Produto");

        jLabel4.setText("Quantidade");

        jButtonAdiconarProduto.setText("Adicionar");
        jButtonAdiconarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdiconarProdutoActionPerformed(evt);
            }
        });

        jButtonRetirarProduto.setText("Retirar");
        jButtonRetirarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRetirarProdutoActionPerformed(evt);
            }
        });

        jComboBoxProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProdutoActionPerformed(evt);
            }
        });

        jComboBoxFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFuncionarioActionPerformed(evt);
            }
        });

        jTextFieldCodigo.setEditable(false);

        jButtonPesquisa.setText("Pesquisar");
        jButtonPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisaActionPerformed(evt);
            }
        });

        jTableVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "PRODUTO", "DESCRICAO", "QUANTIDADE", "VALORUNITARIO", "VALORDESCONTO"
            }
        ));
        jScrollPane1.setViewportView(jTableVenda);

        jLabel5.setText("Valor Total");

        jButtonSalvar.setText("Salvar");

        jButtonExcluir.setText("Excluir");

        jButton6.setText("jButton6");

        jButton7.setText("jButton7");

        jButtonpesquisa.setText("Pesquisar");
        jButtonpesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonpesquisaActionPerformed(evt);
            }
        });

        jButtonPesquisaProduto.setText("Pesquisar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addGap(18, 18, 18)
                            .addComponent(jTextFieldValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(26, 26, 26)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel4))
                                    .addGap(26, 26, 26)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jButtonPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBoxFuncionario, 0, 342, Short.MAX_VALUE)
                                        .addComponent(jComboBoxProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButtonpesquisa)
                                        .addComponent(jButtonPesquisaProduto)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jButtonSalvar)
                        .addGap(27, 27, 27)
                        .addComponent(jButtonExcluir)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jButtonAdiconarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jButtonRetirarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisa))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonpesquisa))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPesquisaProduto))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonRetirarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(jButtonAdiconarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LimparTela() {
        ePedido = new EPedido();

        jTextFieldCodigo.setText("");
        jTextFieldQuantidade.setText("");
        jTextFieldValorTotal.setText("");

        jButtonExcluir.setEnabled(false);
        carregaCombos();
        carregaTabela(ePedido.geteItemPedido());
    }

    public void SelecionarFuncionario(EFuncionario eFuncionario) {
        try {
            for (int i = 0; i < jComboBoxFuncionario.getModel().getSize(); i++) {
                EFuncionario item = (EFuncionario) jComboBoxFuncionario.getModel().getElementAt(i);

                if (eFuncionario.getCodigo() == item.getCodigo()) {
                    jComboBoxFuncionario.setSelectedIndex(i);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this.jDesktopPanePrincipal, e.getMessage());
        }
    }
    private void jButtonPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisaActionPerformed
        try {
            APromocaoPesquisa tela01 = new APromocaoPesquisa(jDesktopPanePrincipal);
            jDesktopPanePrincipal.add(tela01);
            tela01.setVisible(true);

            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButtonPesquisaActionPerformed

    private void jButtonAdiconarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdiconarProdutoActionPerformed
        try {
            EItemPedido eItemPedido = new EItemPedido();
            EProduto produtoSelecionado = (EProduto) jComboBoxProduto.getModel().getSelectedItem();

            if (produtoSelecionado.getCodigo() == 0) {
                throw new Exception("E necessario selecionar um produto");
            }
            eItemPedido.seteProduto(produtoSelecionado);
            eItemPedido.setQuantidade(Double.parseDouble(jTextFieldQuantidade.getText()));

            if (eItemPedido.getQuantidade() <= 0) {
                throw new Exception("e necessario informar a quantidade do produto");
            }
            AdiconarItemNaLista(eItemPedido);
            carregaTabela(ePedido.geteItemPedido());
            jTextFieldValorTotal.setText(NumberFormat.getCurrencyInstance().format(ePedido.getValorTotal()));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "É necessário informar uma quantidade válida.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());

        }
    }//GEN-LAST:event_jButtonAdiconarProdutoActionPerformed

    private void jComboBoxFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFuncionarioActionPerformed

    }//GEN-LAST:event_jComboBoxFuncionarioActionPerformed

    private void jComboBoxProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProdutoActionPerformed
        try {
            if (jComboBoxProduto.getSelectedIndex() != 0) {
                jTextFieldQuantidade.setText("1");
                jTextFieldQuantidade.grabFocus();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jComboBoxProdutoActionPerformed

    private void jButtonpesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonpesquisaActionPerformed
        try {
            AFuncionarioPesquisa tela01 = new AFuncionarioPesquisa(jDesktopPanePrincipal, this);

            jDesktopPanePrincipal.add(tela01);
            tela01.setVisible(true);

            this.setVisible(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());

        }
    }//GEN-LAST:event_jButtonpesquisaActionPerformed

    private void jButtonRetirarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRetirarProdutoActionPerformed
        try {

            if (jTableVenda.getSelectedRow() == -1) {
                throw new Exception(" E necessario selecionar um item na lista");
            }
            if (ePedido.geteItemPedido().isEmpty()) {
                throw new Exception("É necessário ter algum item na lista para ser removido.");
            }
            ePedido.geteItemPedido().remove(jTableVenda.getSelectedRow());

            carregaTabela(ePedido.geteItemPedido());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButtonRetirarProdutoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButtonAdiconarProduto;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonPesquisa;
    private javax.swing.JButton jButtonPesquisaProduto;
    private javax.swing.JButton jButtonRetirarProduto;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JButton jButtonpesquisa;
    private javax.swing.JComboBox<Object> jComboBoxFuncionario;
    private javax.swing.JComboBox<Object> jComboBoxProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableVenda;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldQuantidade;
    private javax.swing.JTextField jTextFieldValorTotal;
    // End of variables declaration//GEN-END:variables
    private void carregaCombos() {
        try {
            //carrega combo produto
            jComboBoxProduto.removeAllItems();
            jComboBoxProduto.addItem(new EProduto(0, "Selecione..."));

            for (EProduto eProduto : new NProduto().listar()) {
                jComboBoxProduto.addItem(eProduto);
            }

            //carregacombo Funcionario
            jComboBoxFuncionario.removeAllItems();
            jComboBoxFuncionario.addItem(new EFuncionario(0, "Selecione"));

            for (EFuncionario eFuncionario : new NFuncionario().listar()) {
                jComboBoxFuncionario.addItem(eFuncionario);
            }

        } catch (Exception e) {
        }
    }

    private void LimpaTela() {

    }

    private void carregaTabela(List<EItemPedido> eItemPedido) {
        Vector<String> cabecalho = new Vector<String>();
        cabecalho.add("CODIGO");
        cabecalho.add("DESCRICAO");
        cabecalho.add("NOME");
        cabecalho.add("QUANTIDADE");
        cabecalho.add("VALORUNITARIO");
        cabecalho.add("VALORDESCONTO");

        Vector detalhe = new Vector();

        ePedido.setValorTotal(0);

        try {
            for (EItemPedido item : eItemPedido) {

                Vector<String> linha = new Vector<String>();
                linha.add(item.geteProduto().getCodigo() + "");
                linha.add(item.geteProduto().getDescricao());
                linha.add(item.geteProduto().getNome());
                linha.add(NumberFormat.getCurrencyInstance().format(item.geteProduto().getQuantidade()));
                linha.add(NumberFormat.getCurrencyInstance().format(item.geteProduto().getValorUnitario()));
                detalhe.add(linha);
                ePedido.setValorTotalAcumulando(item.getQuantidade() * item.geteProduto().getValorUnitario());

                jTableVenda.setModel(new DefaultTableModel(detalhe, cabecalho));

                jTextFieldValorTotal.setText(NumberFormat.getCurrencyInstance().format(ePedido.getValorTotal()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    private void AdiconarItemNaLista(EItemPedido item) {
        boolean achou = false;
        double qtd = 0;

        for (EItemPedido eItemLista : ePedido.geteItemPedido()) {
            if (eItemLista.geteProduto().getCodigo() == item.geteProduto().getCodigo()) {
                achou = true;
                qtd = eItemLista.getQuantidade();
                eItemLista.setQuantidade(qtd + item.getQuantidade());
            }
        }
        if (!achou) {
            ePedido.geteItemPedido().add(item);
        }

    }
}
